package edu.virginia.cs2110.dqxy;

import java.util.ArrayList;

import android.graphics.Rect;


public class Human {

	private float x;
	private float y;
	private float width=50;
	private float height=80;
	private float x_;
	private float y_;
	private float v = 40;
	private Rect hitbox = new Rect();
	private boolean intersectwwall;
	private boolean intersectwzombie;
	private ArrayList<Rect> oblist;

	public Human(int x, int y, ArrayList<Rectangle> oblist) {
		super();
		this.x = x;
		hitbox.x = (int) (x + 0.5);
		hitbox.height = 60;
		hitbox.width = 30;
		this.y = y;
		hitbox.y = (int) (y + 0.5);
		this.oblist = oblist;
	}

	public void move(float elapsedTime) {
		float dx;
		float dy;
		if (x_ - this.x - width / 2 > 0) {
			dx = v;
			for (int i = 0; i < oblist.size(); i++) {
				if (hitbox.intersects(oblist.get(i))) {
					if (hitbox.x > oblist.get(i).x) {
						dx = v;
					} else {
						dx = -v;
					}
				}
			}
		} else if (x_ - this.x - width / 2 < 0) {
			dx = -v;
			for (int i = 0; i < oblist.size(); i++) {
				if (hitbox.intersects(oblist.get(i))) {
					if (hitbox.x + hitbox.width > oblist.get(i).getMaxX()) {
						dx = v;
					} else {
						dx = -v;
					}
				}
			}
		} else {
			dx = 0;
		}
		if (y_ - this.y - height / 2 > 0) {
			dy = v;
			for (int i = 0; i < oblist.size(); i++) {
				if (hitbox.intersects(oblist.get(i))) {
					if (hitbox.y > oblist.get(i).y) {
						dy = v;
					} else {
						dy = -v;
					}
				}
			}
		} else if (y_ - this.y - height / 2 < 0) {
			dy = -v;
			for (int i = 0; i < oblist.size(); i++) {
				if (hitbox.intersects(oblist.get(i))) {
					if (hitbox.y + hitbox.height > oblist.get(i).getMaxY()) {
						dy = v;
					} else {
						dy = -v;
					}
				}
			}
		} else {
			dy = 0;
		}
		x += dx * elapsedTime;
		hitbox.x = (int) (x + width / 2 - hitbox.width / 2 + 0.5);
		y += dy * elapsedTime;
		hitbox.y = (int) (y + height / 2 - hitbox.height / 2 + 0.5);
	}

	public Rectangle getHitbox() {
		return hitbox;
	}

	public void setHitbox(Rectangle hitbox) {
		this.hitbox = hitbox;
	}

	public void intersectwwall(Rectangle r) {

	}

	public float getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public float getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}

	public float getX_() {
		return x_;
	}

	public void setX_(float x_) {
		this.x_ = x_;
	}

	public float getY_() {
		return y_;
	}

	public void setY_(float y_) {
		this.y_ = y_;
	}

	public float getWidth() {
		return width;
	}

	public void setWidth(float width) {
		this.width = width;
	}

	public float getHeight() {
		return height;
	}

	public void setHeight(float height) {
		this.height = height;
	}

	public void intersectwzombie(Zombie z) {
		intersectwzombie = hitbox.intersects(z.getHitbox());
	}

	public float getV() {
		return v;
	}

	public void setV(float v) {
		this.v = v;
	}

}
